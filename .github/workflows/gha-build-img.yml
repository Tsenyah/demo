name: github actions demo
# run desctiption
run-name: trying to build an image using gha
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  

env:
  IMAGE_NAME: tomsenyah/dicicd

  IMAGE_TAG: 1.0.${{github.run_number}}
  BUILD_CONDT_PR: linux/arm64
  BUILD_CONDT_PUSH: "linux/arm64,linux/amd64"
jobs:

  build:

    runs-on: self-hosted

    strategy:
      matrix:
        platform: [linux/amd64,linux/arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      
      - uses: docker/login-action@v1

        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}


    

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build images for different platforms
      #   run: |
      #     docker buildx build --platform linux/amd64 -t your-image-name-amd64 .
      #     docker buildx build --platform linux/arm64 -t your-image-name-arm64 .
      #     docker buildx stop <builder_name>
      #     docker buildx rm <builder_name>

      # - name: Remove All Existing Builders
      #   run: |
      #     docker buildx rm -f

      - name: Set up Docker Buildx
        
        run: |
          export DOCKER_CLI_BUILDKIT=1
          docker buildx create --use --name TomBuilder --driver-opt network=host --builder docker/dockerfile:experimental --driver-opt env.BUILDKIT_HOST=TomBuilder


      - name: Build Multi-Architecture Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t tomsenyah/dicicd:${{env.IMAGE_TAG }} \
            --file $GITHUB_WORKSPACE/Dockerfile \
            .

      - name: Push Multi-Architecture Image
        run: |
          docker buildx inspect TomBuilder --bootstrap
          docker buildx push --platform linux/amd64,linux/arm64 tomsenyah/dicicd:latest
 

            
      # - name: Push Docker images
      #   run: |
      #     docker buildx create --use
      #     docker buildx push your-image-name-amd64
      #     docker buildx push your-image-name-arm64

      # - name: Create Manifest List
      #   run: |
      #     docker buildx create --use
      #     docker buildx create manifest \
      #       your-image-name \
      #       your-image-name-amd64 \
      #       your-image-name-arm64
      #     docker buildx inspect --bootstrap
      #     docker buildx push your-image-name --all

        # regular docker build
      # - name: docker build
      #   run: docker build . --file Dockerfile --tag tomsenyah/dicicd:${{ github.sha }}

      # - name: docker push
      #   run: docker push tomsenyah/dicicd:${{ github.sha }}
     
     
        #BuildX buuld  
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: push to docker
      #   uses: docker/build-push-action@v5
      #   with:
      #         context: .
      #         cache-from: type=gha
      #         cache-to: type=gha,mode=max
      #         platforms: ${{env.BUILD_CONDT_PR}}
      #         tags: tomsenyah/dicicd:${{env.IMAGE_TAG }}

        # merge mainfest
      # - name: Create Manifest List
      #   run: |
      #       docker buildx create --use
      #       docker buildx create manifest \
      #         your-image-name \
      #         your-image-name-amd64 \
      #         your-image-name-arm64
      #       docker buildx inspect --bootstrap
      #       docker buildx push your-image-name --all
      #     # conditional build
      # - name: push command run
      #   uses: docker/build-push-action@v5
      #   if: github.event_name == 'push'
      #   with:
      #     context: .
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: tomsenyah/dicicd:${{env.IMAGE_TAG }}
        # build when its a pr

      # - name: pr command run
      #   uses: docker/build-push-action@v5
      #   if: github.event_name == 'pull_request'
       
      #   with:
      #     context: .
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     platforms: linux/amd64
      #     push: true
      #     tags: tomsenyah/dicicd:${{env.IMAGE_TAG}}
        
